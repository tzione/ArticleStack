import * as tslib_1 from "tslib";
import { NgModule, Inject, Optional } from '@angular/core';
import { StoreRootModule, StoreFeatureModule } from '@ngrx/store';
import { EffectsRootModule } from './effects_root_module';
import { FEATURE_EFFECTS } from './tokens';
import * as ɵngcc0 from '@angular/core';
var EffectsFeatureModule = /** @class */ (function () {
    function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {
        effectSourceGroups.forEach(function (group) {
            return group.forEach(function (effectSourceInstance) {
                return root.addEffects(effectSourceInstance);
            });
        });
    }
    EffectsFeatureModule = tslib_1.__decorate([
        tslib_1.__param(1, Inject(FEATURE_EFFECTS)),
        tslib_1.__param(2, Optional()),
        tslib_1.__param(3, Optional()),
        tslib_1.__metadata("design:paramtypes", [EffectsRootModule, Array, StoreRootModule,
            StoreFeatureModule])
    ], EffectsFeatureModule);
EffectsFeatureModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: EffectsFeatureModule });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: EffectsRootModule }, { type: Array, decorators: [{
                type: Inject,
                args: [FEATURE_EFFECTS]
            }] }, { type: StoreRootModule, decorators: [{
                type: Optional
            }] }, { type: StoreFeatureModule, decorators: [{
                type: Optional
            }] }]; }, null);
EffectsFeatureModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function EffectsFeatureModule_Factory(t) { return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(StoreRootModule, 8), ɵngcc0.ɵɵinject(StoreFeatureModule, 8)); } });
    return EffectsFeatureModule;
}());
export { EffectsFeatureModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3R6aW9uL09uZURyaXZlL9ee16HXnteb15nXnS9Qcml2YXRlL0FydGljbGVTdGFjay1tYXN0ZXIvQXJ0aWNsZVN0YWNrLW1hc3Rlci9ub2RlX21vZHVsZXMvQG5ncngvZWZmZWN0cy9lc201L3NyYy9lZmZlY3RzX2ZlYXR1cmVfbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7K0NBUStDLEFBQzFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O21UQU1RIiwiZmlsZSI6ImVmZmVjdHNfZmVhdHVyZV9tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN0b3JlUm9vdE1vZHVsZSwgU3RvcmVGZWF0dXJlTW9kdWxlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgRWZmZWN0c1Jvb3RNb2R1bGUgfSBmcm9tICcuL2VmZmVjdHNfcm9vdF9tb2R1bGUnO1xuaW1wb3J0IHsgRkVBVFVSRV9FRkZFQ1RTIH0gZnJvbSAnLi90b2tlbnMnO1xudmFyIEVmZmVjdHNGZWF0dXJlTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEVmZmVjdHNGZWF0dXJlTW9kdWxlKHJvb3QsIGVmZmVjdFNvdXJjZUdyb3Vwcywgc3RvcmVSb290TW9kdWxlLCBzdG9yZUZlYXR1cmVNb2R1bGUpIHtcbiAgICAgICAgZWZmZWN0U291cmNlR3JvdXBzLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgICAgICAgICByZXR1cm4gZ3JvdXAuZm9yRWFjaChmdW5jdGlvbiAoZWZmZWN0U291cmNlSW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm9vdC5hZGRFZmZlY3RzKGVmZmVjdFNvdXJjZUluc3RhbmNlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgRWZmZWN0c0ZlYXR1cmVNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7fSksXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgxLCBJbmplY3QoRkVBVFVSRV9FRkZFQ1RTKSksXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgyLCBPcHRpb25hbCgpKSxcbiAgICAgICAgdHNsaWJfMS5fX3BhcmFtKDMsIE9wdGlvbmFsKCkpLFxuICAgICAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWZmZWN0c1Jvb3RNb2R1bGUsIEFycmF5LCBTdG9yZVJvb3RNb2R1bGUsXG4gICAgICAgICAgICBTdG9yZUZlYXR1cmVNb2R1bGVdKVxuICAgIF0sIEVmZmVjdHNGZWF0dXJlTW9kdWxlKTtcbiAgICByZXR1cm4gRWZmZWN0c0ZlYXR1cmVNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgRWZmZWN0c0ZlYXR1cmVNb2R1bGUgfTtcbiJdfQ==