/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { of, merge } from 'rxjs';
import { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';
import { OAuthResourceServerErrorHandler } from './resource-server-error-handler';
import { OAuthModuleConfig } from '../oauth-module.config';
import { OAuthStorage } from '../types';
import { OAuthService } from '../oauth-service';
import * as ɵngcc0 from '@angular/core';
var DefaultOAuthInterceptor = /** @class */ (function () {
    function DefaultOAuthInterceptor(authStorage, oAuthService, errorHandler, moduleConfig) {
        this.authStorage = authStorage;
        this.oAuthService = oAuthService;
        this.errorHandler = errorHandler;
        this.moduleConfig = moduleConfig;
    }
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    DefaultOAuthInterceptor.prototype.checkUrl = /**
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        if (this.moduleConfig.resourceServer.customUrlValidation) {
            return this.moduleConfig.resourceServer.customUrlValidation(url);
        }
        if (this.moduleConfig.resourceServer.allowedUrls) {
            return !!this.moduleConfig.resourceServer.allowedUrls.find((/**
             * @param {?} u
             * @return {?}
             */
            function (u) { return url.startsWith(u); }));
        }
        return true;
    };
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    DefaultOAuthInterceptor.prototype.intercept = /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    function (req, next) {
        var _this = this;
        /** @type {?} */
        var url = req.url.toLowerCase();
        if (!this.moduleConfig) {
            return next.handle(req);
        }
        if (!this.moduleConfig.resourceServer) {
            return next.handle(req);
        }
        if (this.moduleConfig.resourceServer.allowedUrls && !this.checkUrl(url)) {
            return next.handle(req);
        }
        /** @type {?} */
        var sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;
        if (!sendAccessToken) {
            return next
                .handle(req)
                .pipe(catchError((/**
             * @param {?} err
             * @return {?}
             */
            function (err) { return _this.errorHandler.handleError(err); })));
        }
        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((/**
         * @param {?} token
         * @return {?}
         */
        function (token) { return token ? true : false; }))), this.oAuthService.events.pipe(filter((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return e.type === 'token_received'; })), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError((/**
         * @param {?} _
         * @return {?}
         */
        function (_) { return of(null); })), // timeout is not an error
        map((/**
         * @param {?} _
         * @return {?}
         */
        function (_) { return _this.oAuthService.getAccessToken(); })))).pipe(take(1), mergeMap((/**
         * @param {?} token
         * @return {?}
         */
        function (token) {
            if (token) {
                /** @type {?} */
                var header = 'Bearer ' + token;
                /** @type {?} */
                var headers = req.headers.set('Authorization', header);
                req = req.clone({ headers: headers });
            }
            return next
                .handle(req)
                .pipe(catchError((/**
             * @param {?} err
             * @return {?}
             */
            function (err) { return _this.errorHandler.handleError(err); })));
        })));
    };
    /** @nocollapse */
    DefaultOAuthInterceptor.ctorParameters = function () { return [
        { type: OAuthStorage },
        { type: OAuthService },
        { type: OAuthResourceServerErrorHandler },
        { type: OAuthModuleConfig, decorators: [{ type: Optional }] }
    ]; };
DefaultOAuthInterceptor.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: DefaultOAuthInterceptor, factory: function DefaultOAuthInterceptor_Factory(t) { return new (t || DefaultOAuthInterceptor)(ɵngcc0.ɵɵinject(OAuthStorage), ɵngcc0.ɵɵinject(OAuthService), ɵngcc0.ɵɵinject(OAuthResourceServerErrorHandler), ɵngcc0.ɵɵinject(OAuthModuleConfig, 8)); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{
        type: Injectable
    }], function () { return [{ type: OAuthStorage }, { type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{
                type: Optional
            }] }]; }, { authStorage: [], oAuthService: [], errorHandler: [], moduleConfig: [], checkUrl: [], intercept: [] });
    return DefaultOAuthInterceptor;
}());
export { DefaultOAuthInterceptor };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.authStorage;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.oAuthService;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.errorHandler;
    /**
     * @type {?}
     * @private
     */
    DefaultOAuthInterceptor.prototype.moduleConfig;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3R6aW9uL09uZURyaXZlL9ee16HXnteb15nXnS9Qcml2YXRlL0FydGljbGVTdGFjay1tYXN0ZXIvQXJ0aWNsZVN0YWNrLW1hc3Rlci9ub2RlX21vZHVsZXMvYW5ndWxhci1vYXV0aDItb2lkYy9lc201L2ludGVyY2VwdG9ycy9kZWZhdWx0LW9hdXRoLmludGVyY2VwdG9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7QUFXQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFxR00sQUFHQTs7Ozs7Ozs7Ozs7Ozs4SEFPRyIsImZpbGUiOiJkZWZhdWx0LW9hdXRoLmludGVyY2VwdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBvZiwgbWVyZ2UgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGNhdGNoRXJyb3IsIGZpbHRlciwgbWFwLCB0YWtlLCBtZXJnZU1hcCwgdGltZW91dCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IE9BdXRoUmVzb3VyY2VTZXJ2ZXJFcnJvckhhbmRsZXIgfSBmcm9tICcuL3Jlc291cmNlLXNlcnZlci1lcnJvci1oYW5kbGVyJztcbmltcG9ydCB7IE9BdXRoTW9kdWxlQ29uZmlnIH0gZnJvbSAnLi4vb2F1dGgtbW9kdWxlLmNvbmZpZyc7XG5pbXBvcnQgeyBPQXV0aFN0b3JhZ2UgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBPQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9vYXV0aC1zZXJ2aWNlJztcbnZhciBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvcihhdXRoU3RvcmFnZSwgb0F1dGhTZXJ2aWNlLCBlcnJvckhhbmRsZXIsIG1vZHVsZUNvbmZpZykge1xuICAgICAgICB0aGlzLmF1dGhTdG9yYWdlID0gYXV0aFN0b3JhZ2U7XG4gICAgICAgIHRoaXMub0F1dGhTZXJ2aWNlID0gb0F1dGhTZXJ2aWNlO1xuICAgICAgICB0aGlzLmVycm9ySGFuZGxlciA9IGVycm9ySGFuZGxlcjtcbiAgICAgICAgdGhpcy5tb2R1bGVDb25maWcgPSBtb2R1bGVDb25maWc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHs/fSB1cmxcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIERlZmF1bHRPQXV0aEludGVyY2VwdG9yLnByb3RvdHlwZS5jaGVja1VybCA9IC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHs/fSB1cmxcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uICh1cmwpIHtcbiAgICAgICAgaWYgKHRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyLmN1c3RvbVVybFZhbGlkYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5jdXN0b21VcmxWYWxpZGF0aW9uKHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyLmFsbG93ZWRVcmxzKSB7XG4gICAgICAgICAgICByZXR1cm4gISF0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlci5hbGxvd2VkVXJscy5maW5kKCgvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7P30gdVxuICAgICAgICAgICAgICogQHJldHVybiB7P31cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gKHUpIHsgcmV0dXJuIHVybC5zdGFydHNXaXRoKHUpOyB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IHJlcVxuICAgICAqIEBwYXJhbSB7P30gbmV4dFxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgRGVmYXVsdE9BdXRoSW50ZXJjZXB0b3IucHJvdG90eXBlLmludGVyY2VwdCA9IC8qKlxuICAgICAqIEBwYXJhbSB7P30gcmVxXG4gICAgICogQHBhcmFtIHs/fSBuZXh0XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAocmVxLCBuZXh0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICAgICAgdmFyIHVybCA9IHJlcS51cmwudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKCF0aGlzLm1vZHVsZUNvbmZpZykge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQuaGFuZGxlKHJlcSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLm1vZHVsZUNvbmZpZy5yZXNvdXJjZVNlcnZlcikge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQuaGFuZGxlKHJlcSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyLmFsbG93ZWRVcmxzICYmICF0aGlzLmNoZWNrVXJsKHVybCkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXEpO1xuICAgICAgICB9XG4gICAgICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICAgICAgdmFyIHNlbmRBY2Nlc3NUb2tlbiA9IHRoaXMubW9kdWxlQ29uZmlnLnJlc291cmNlU2VydmVyLnNlbmRBY2Nlc3NUb2tlbjtcbiAgICAgICAgaWYgKCFzZW5kQWNjZXNzVG9rZW4pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXh0XG4gICAgICAgICAgICAgICAgLmhhbmRsZShyZXEpXG4gICAgICAgICAgICAgICAgLnBpcGUoY2F0Y2hFcnJvcigoLyoqXG4gICAgICAgICAgICAgKiBAcGFyYW0gez99IGVyclxuICAgICAgICAgICAgICogQHJldHVybiB7P31cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gKGVycikgeyByZXR1cm4gX3RoaXMuZXJyb3JIYW5kbGVyLmhhbmRsZUVycm9yKGVycik7IH0pKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lcmdlKG9mKHRoaXMub0F1dGhTZXJ2aWNlLmdldEFjY2Vzc1Rva2VuKCkpLnBpcGUoZmlsdGVyKCgvKipcbiAgICAgICAgICogQHBhcmFtIHs/fSB0b2tlblxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gKHRva2VuKSB7IHJldHVybiB0b2tlbiA/IHRydWUgOiBmYWxzZTsgfSkpKSwgdGhpcy5vQXV0aFNlcnZpY2UuZXZlbnRzLnBpcGUoZmlsdGVyKCgvKipcbiAgICAgICAgICogQHBhcmFtIHs/fSBlXG4gICAgICAgICAqIEByZXR1cm4gez99XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiAoZSkgeyByZXR1cm4gZS50eXBlID09PSAndG9rZW5fcmVjZWl2ZWQnOyB9KSksIHRpbWVvdXQodGhpcy5vQXV0aFNlcnZpY2Uud2FpdEZvclRva2VuSW5Nc2VjIHx8IDApLCBjYXRjaEVycm9yKCgvKipcbiAgICAgICAgICogQHBhcmFtIHs/fSBfXG4gICAgICAgICAqIEByZXR1cm4gez99XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiAoXykgeyByZXR1cm4gb2YobnVsbCk7IH0pKSwgLy8gdGltZW91dCBpcyBub3QgYW4gZXJyb3JcbiAgICAgICAgbWFwKCgvKipcbiAgICAgICAgICogQHBhcmFtIHs/fSBfXG4gICAgICAgICAqIEByZXR1cm4gez99XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiAoXykgeyByZXR1cm4gX3RoaXMub0F1dGhTZXJ2aWNlLmdldEFjY2Vzc1Rva2VuKCk7IH0pKSkpLnBpcGUodGFrZSgxKSwgbWVyZ2VNYXAoKC8qKlxuICAgICAgICAgKiBAcGFyYW0gez99IHRva2VuXG4gICAgICAgICAqIEByZXR1cm4gez99XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAgICAgICAgIGlmICh0b2tlbikge1xuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICAgICAgICAgICAgICB2YXIgaGVhZGVyID0gJ0JlYXJlciAnICsgdG9rZW47XG4gICAgICAgICAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgICAgICAgICAgICAgIHZhciBoZWFkZXJzID0gcmVxLmhlYWRlcnMuc2V0KCdBdXRob3JpemF0aW9uJywgaGVhZGVyKTtcbiAgICAgICAgICAgICAgICByZXEgPSByZXEuY2xvbmUoeyBoZWFkZXJzOiBoZWFkZXJzIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHRcbiAgICAgICAgICAgICAgICAuaGFuZGxlKHJlcSlcbiAgICAgICAgICAgICAgICAucGlwZShjYXRjaEVycm9yKCgvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7P30gZXJyXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBfdGhpcy5lcnJvckhhbmRsZXIuaGFuZGxlRXJyb3IoZXJyKTsgfSkpKTtcbiAgICAgICAgfSkpKTtcbiAgICB9O1xuICAgIERlZmF1bHRPQXV0aEludGVyY2VwdG9yLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogSW5qZWN0YWJsZSB9XG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi9cbiAgICBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvci5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBPQXV0aFN0b3JhZ2UgfSxcbiAgICAgICAgeyB0eXBlOiBPQXV0aFNlcnZpY2UgfSxcbiAgICAgICAgeyB0eXBlOiBPQXV0aFJlc291cmNlU2VydmVyRXJyb3JIYW5kbGVyIH0sXG4gICAgICAgIHsgdHlwZTogT0F1dGhNb2R1bGVDb25maWcsIGRlY29yYXRvcnM6IFt7IHR5cGU6IE9wdGlvbmFsIH1dIH1cbiAgICBdOyB9O1xuICAgIHJldHVybiBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvcjtcbn0oKSk7XG5leHBvcnQgeyBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvciB9O1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvci5wcm90b3R5cGUuYXV0aFN0b3JhZ2U7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBEZWZhdWx0T0F1dGhJbnRlcmNlcHRvci5wcm90b3R5cGUub0F1dGhTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgRGVmYXVsdE9BdXRoSW50ZXJjZXB0b3IucHJvdG90eXBlLmVycm9ySGFuZGxlcjtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIERlZmF1bHRPQXV0aEludGVyY2VwdG9yLnByb3RvdHlwZS5tb2R1bGVDb25maWc7XG59XG4iXX0=